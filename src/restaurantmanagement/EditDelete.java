/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package restaurantmanagement;

import Model.InventoryModel;
import database.DatabaseHandler;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author Medul
 */
public class EditDelete extends javax.swing.JFrame {

    /**
     * Creates new form EditDelete
     */
    String value;
    String value1;
    String value2;
    String value3;
    String value4;
    DatabaseHandler dh = new DatabaseHandler();
    DefaultTableModel dm = new DefaultTableModel();
    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;

    public EditDelete() {
        initComponents();
        Update_Table();
        java.awt.Toolkit tk = java.awt.Toolkit.getDefaultToolkit();
        int xsize = (int) tk.getScreenSize().getWidth();
        int ysize = (int) tk.getScreenSize().getHeight();
        this.setSize(xsize, ysize);

    }

    private void filter(String sql) {
        dm = (DefaultTableModel) jTable1.getModel();
        TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(dm);
        jTable1.setRowSorter(tr);
        tr.setRowFilter(RowFilter.regexFilter(sql));

    }

//    class RowPopup extends JPopupMenu {
//
//        public RowPopup(JTable table) {
//            JMenuItem Delete = new JMenuItem("Delete");
//            JMenuItem Update = new JMenuItem("Update");
//            Delete.addActionListener(new ActionListener() {
//                @Override
//                public void actionPerformed(ActionEvent e) {
//                    //    int ID;
//
//                    dh.deleteFromItem(value);
//                    EditDelete reload = new EditDelete();
//                    setVisible(true);
//                    reload.setVisible(false);
//
//                    //JOptionPane.showMessageDialog(Delete, "Deleted");
//                }
//            });
//
//            //Update work
//            Update.addActionListener(new ActionListener() {
//
//                @Override
//                public void actionPerformed(ActionEvent e) {
//
//                    // Customer_model model=new Customer_model(Integer.parseInt(customerid_txt.getText()),name_txt.getText(),phone_txt.getText(),email_txt.getText(),address_txt.getText());
//                    PopUpModel PopUpModel = new PopUpModel(Integer.parseInt(value), value1, value2, value3, value4);
//                    dh.updateIntoItem(PopUpModel, value);
//                    EditDelete reload = new EditDelete();
//                    setVisible(true);
//                    reload.setVisible(false);
//
//                }
//            });
//            add(Delete);
//            add(Update);
//        }
//
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Quantity", "Price", "ProductCode"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        txtSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSearchActionPerformed(evt);
            }
        });
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 630, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(110, 110, 110)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(76, 76, 76)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
//        // TODO add your handling code here:
//        int index = jTable1.getSelectedRow();
//        TableModel model = jTable1.getModel();
//        value = model.getValueAt(index, 0).toString();
//        value1 = model.getValueAt(index, 1).toString();
//        value2 = model.getValueAt(index, 2).toString();
//        value3 = model.getValueAt(index, 3).toString();
////        value4 = model.getValueAt(index, 4).toString();

    }//GEN-LAST:event_jTable1MouseClicked

    private void txtSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSearchActionPerformed
        // TODO add your handling code here:


    }//GEN-LAST:event_txtSearchActionPerformed

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String txt = txtSearch.getText();
        filter(txt);
    }//GEN-LAST:event_txtSearchKeyReleased

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        this.hide();
        MainMenu x = new MainMenu();
        x.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
            int p = JOptionPane.showConfirmDialog(null, "Do you want to update", "Update", JOptionPane.YES_NO_OPTION);
            if (p == 0 || evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                int index = jTable1.getSelectedRow();
                TableModel model = jTable1.getModel();
                value = model.getValueAt(index, 0).toString();
                value1 = model.getValueAt(index, 1).toString();
                value2 = model.getValueAt(index, 2).toString();
                value3 = model.getValueAt(index, 3).toString();
                value4 = model.getValueAt(index, 4).toString();
                InventoryModel a = new InventoryModel(Integer.parseInt(value), value1, value2, value3, value4);
                dh.updateIntoInventory(a, value);
                // Update_Table();
            }

        }

        if (evt.getKeyCode() == java.awt.event.KeyEvent.VK_DELETE) {
            int p = JOptionPane.showConfirmDialog(null, "Do you want to Delete", "Delete", JOptionPane.YES_NO_OPTION);
            if (p == 0 || evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER) {
                int index = jTable1.getSelectedRow();
                TableModel model = jTable1.getModel();
                value = model.getValueAt(index, 0).toString();
                dh.deleteFromItem(value);
                // Update_Table();
            }

        }

    }//GEN-LAST:event_jTable1KeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDelete.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new EditDelete().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables

    private void Update_Table() {
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.

        try {
            for (int i = 0; i < dh.getAll_Item().size(); i++) {
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                model.addRow(new Object[]{dh.getAll_Item().get(i).getID(), dh.getAll_Item().get(i).getName(), dh.getAll_Item().get(i).getQuantity(), dh.getAll_Item().get(i).getPrice(), dh.getAll_Item().get(i).getProductCode()});
            }
        } catch (Exception e) {
//            System.out.println(e.toString());
            // JOptionPane.showMessageDialog(null, e);
        }
    }

}
